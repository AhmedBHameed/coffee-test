{"id":"wVGV","dependencies":[{"name":"/home/ahmed/Desktop/WWW/coffee-test/package.json","includedInParent":true,"mtime":1568977643888},{"name":"/home/ahmed/Desktop/WWW/coffee-test/node_modules/prop-types/package.json","includedInParent":true,"mtime":1550330742316},{"name":"./lib/ReactPropTypesSecret","loc":{"line":10,"column":35},"parent":"/home/ahmed/Desktop/WWW/coffee-test/node_modules/prop-types/factoryWithThrowingShims.js","resolved":"/home/ahmed/Desktop/WWW/coffee-test/node_modules/prop-types/lib/ReactPropTypesSecret.js"}],"generated":{"js":"var $wVGV$exports = {};\nvar $wVGV$var$ReactPropTypesSecret = $parcel$require(\"wVGV\", \"./lib/ReactPropTypesSecret\");\n\nfunction $wVGV$var$emptyFunction() {}\n\nfunction $wVGV$var$emptyFunctionWithReset() {}\n\n$wVGV$var$emptyFunctionWithReset.resetWarningCache = $wVGV$var$emptyFunction;\n\n$wVGV$exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === $wVGV$var$ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: $wVGV$var$emptyFunctionWithReset,\n    resetWarningCache: $wVGV$var$emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};"},"sourceMaps":null,"error":null,"hash":"93f157915388678a5f630ebb3d614821","cacheData":{"env":{},"imports":{"$require$./lib/ReactPropTypesSecret":["./lib/ReactPropTypesSecret","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}