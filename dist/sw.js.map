{"version":3,"sources":["sw.js"],"names":["cacheName","urlsToCache","self","addEventListener","e","console","log","waitUntil","caches","open","then","cache","addAll","cacheFirst","req","match","cached","fetch","networkAndCache","fresh","put","clone","catch","err","error","request","url","URL","origin","location","respondWith"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAG,WAAlB;AAEA,IAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,aAAN,EAAqB,QAArB,EAA+B,cAA/B,EAA+C,IAA/C,CAApB;AAEAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAASC,CAAT,EAAY;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,EAAAA,CAAC,CAACG,SAAF,CACEC,MAAM,CAACC,IAAP,CAAYT,SAAZ,EAAuBU,IAAvB,CAA4B,UAASC,KAAT,EAAgB;AAC1C,WAAOA,KAAK,CAACC,MAAN,CAAaX,WAAb,CAAP;AACD,GAFD,CADF;AAKD,CAPD;AASAC,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAkC,UAAAC,CAAC,EAAI;AACrC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,CAHD;;AAKA,SAASO,UAAT,CAAoBC,GAApB,EAAyB;AACvBN,EAAAA,MAAM,CAACC,IAAP,CAAYT,SAAZ,EAAuBU,IAAvB,CAA4B,UAASC,KAAT,EAAgB;AAC1CA,IAAAA,KAAK,CAACI,KAAN,CAAYD,GAAZ,EAAiBJ,IAAjB,CAAsB,UAASM,MAAT,EAAiB;AACrC,aAAOA,MAAM,IAAIC,KAAK,CAACH,GAAD,CAAtB;AACD,KAFD;AAGD,GAJD;AAKD;;AAED,SAASI,eAAT,CAAyBJ,GAAzB,EAA8B;AAC5B,SAAON,MAAM,CACVC,IADI,CACCT,SADD,EAEJU,IAFI,CAEC,UAASC,KAAT,EAAgB;AACpBM,IAAAA,KAAK,CAACH,GAAD,CAAL,CACGJ,IADH,CACQ,UAASS,KAAT,EAAgB;AACpBR,MAAAA,KAAK,CAACS,GAAN,CAAUN,GAAV,EAAeK,KAAK,CAACE,KAAN,EAAf;AACA,aAAOF,KAAP;AACD,KAJH,EAKGG,KALH,CAKS,UAASC,GAAT,EAAc;AACnBlB,MAAAA,OAAO,CAACmB,KAAR,CAAc,aAAd,EAA6BD,GAA7B;AACD,KAPH;AAQD,GAXI,EAYJD,KAZI,CAYE,UAASC,GAAT,EAAc;AACnBlB,IAAAA,OAAO,CAACmB,KAAR,CAAc,cAAd,EAA8BD,GAA9B;AACD,GAdI,CAAP;AAeD;;AAEDrB,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAASC,CAAT,EAAY;AACzC,MAAMU,GAAG,GAAGV,CAAC,CAACqB,OAAd;AACA,MAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQb,GAAG,CAACY,GAAZ,CAAZ;;AAEA,MAAIA,GAAG,CAACE,MAAJ,KAAeC,QAAQ,CAACD,MAA5B,EAAoC;AAClC,WAAOxB,CAAC,CAAC0B,WAAF,CAAcjB,UAAU,CAACC,GAAD,CAAxB,CAAP;AACD,GAFD,MAEO;AACL,WAAOV,CAAC,CAAC0B,WAAF,CAAcZ,eAAe,CAACJ,GAAD,CAA7B,CAAP;AACD;AACF,CATD","file":"sw.js","sourceRoot":"../src","sourcesContent":["const cacheName = \"Caffee-v1\";\n\nconst urlsToCache = [\"/\", \"/index.html\", \"/cup_*\", \"/manifest.js\", \"/*\"];\n\nself.addEventListener(\"install\", function(e) {\n  console.log(\"Installing SW!\");\n  e.waitUntil(\n    caches.open(cacheName).then(function(cache) {\n      return cache.addAll(urlsToCache);\n    })\n  );\n});\n\nself.addEventListener(\"activate\", e => {\n  // We can use it here to delete old versions of the app.\n  console.log(\"Activating the service worker!\");\n});\n\nfunction cacheFirst(req) {\n  caches.open(cacheName).then(function(cache) {\n    cache.match(req).then(function(cached) {\n      return cached || fetch(req);\n    });\n  });\n}\n\nfunction networkAndCache(req) {\n  return caches\n    .open(cacheName)\n    .then(function(cache) {\n      fetch(req)\n        .then(function(fresh) {\n          cache.put(req, fresh.clone());\n          return fresh;\n        })\n        .catch(function(err) {\n          console.error(\"Fetch error\", err);\n        });\n    })\n    .catch(function(err) {\n      console.error(\"Caches error\", err);\n    });\n}\n\nself.addEventListener(\"fetch\", function(e) {\n  const req = e.request;\n  const url = new URL(req.url);\n\n  if (url.origin === location.origin) {\n    return e.respondWith(cacheFirst(req));\n  } else {\n    return e.respondWith(networkAndCache(req));\n  }\n});\n"]}